data = example_space,
group = "group",
method = "ellipsis"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellip2sis"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipse"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "ellipsis"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "ellipse"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "density"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mcp"
)
length(dimensions)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
length(dimensions)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mcp"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mcp"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1,
data = example_space,
group = "group",
method = "mcp"
)
space_size(
formula = group ~ dimension_1,
data = example_space,
group = "group",
method = "density"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "density"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
method = "density"
)
space_size(
formula = group ~ dimension_1,
data = example_space,
method = "density"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1,
data = example_space,
method = "density"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1,
data = example_space,
method = "density"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1,
data = example_space,
method = "density"
)
space_size(
formula = group ~ dimension_1,
data = example_space,
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mst"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3 + dimension_2* dimension_3,
data = example_space,
group = "group",
method = "mst"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3 + dimension_2* dimension_3,
data = example_space,
group = "group",
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3 + dimension_2+ dimension_3,
data = example_space,
group = "group",
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mst"
)
space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "ellipse"
)
a <- space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "ellipse"
)
b <- space_size(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
group = "group",
method = "mst"
)
cor(a[,3], b[,3])
b <- space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "density"
)
cor(a[,3], b[,3])
b
b <- space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "density"
)
b
cor(a[,3], b[,3])
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/rarefact_space_similarity.R")
FUN <- "space_size"
#run function
source(file.path("./R", paste0(FUN,".R")))
# setwd(tempdir())
#open in rstudio
##open.fun(fun = FUN)
# remove objects but no functions
rm(list = setdiff(ls(), c(lsf.str(), "FUN")))
#remove images and sound files
rm.sf()
# to troubleshoot internally
for(i in run.def.args(FUN)) try(eval(parse(text = i)), silent = T)
data("example_space")
# plot data
xs <- tapply(example_space$dimension_1, example_space$group, mean)
ys <- tapply(example_space$dimension_2, example_space$group, mean)
plot(example_space[, c("dimension_1", "dimension_2")], col = example_space$color, pch = 20, cex = 1.8)
text(xs, ys, labels = names(xs), cex = 2.5)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "mcp"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipsis"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "ellipse"
)
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mst"
)
FUN <- "space_size_difference"
#run function
source(file.path("./R", paste0(FUN,".R")))
# remove objects but no functions
rm(list = setdiff(ls(), c(lsf.str(), "FUN")))
#remove images and sound files
rm.sf()
# to troubleshoot internally
for(i in run.def.args(FUN)) try(eval(parse(text = i)), silent = T)
rm(i)
data("example_space")
# plot data
xs <- tapply(example_space$dimension_1, example_space$group, mean)
ys <- tapply(example_space$dimension_2, example_space$group, mean)
plot(example_space[, c("dimension_1", "dimension_2")], col = example_space$color, pch = 20, cex = 1.8)
text(xs, ys, labels = names(xs), cex = 2.5)
tad1 <- space_size_difference(
X = example_space,
dimensions =  c("dimension_1", "dimension_2"),
group = "group",
method = "mcp"
)
tad1 <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "mcp"
)
tadrf <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "mcp"
)
plot(tad1$size.difference, tadrf$size.difference)
cor(tad1$size.difference, tadrf$size.difference)
tadrf <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "mst"
)
cor(tad1$size.difference, tadrf$size.difference)
tadrf <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
tadell <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
tadell
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size.R")
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/space_size_difference.R")
tadell <- space_size_difference(
formula =  group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
cor(tad1$size.difference, tadell$size.difference)
FUN <- "rarefact_space_size"
#run function
source(file.path("./R", paste0(FUN,".R")))
# remove objects but no functions
rm(list = setdiff(ls(), c(lsf.str(), "FUN")))
#remove images and sound files
rm.sf()
# to troubleshoot internally
for(i in run.def.args(FUN)) try(eval(parse(text = i)), silent = T)
rm(i)
data("example_space")
# plot data
xs <- tapply(example_space$dimension_1, example_space$group, mean)
ys <- tapply(example_space$dimension_2, example_space$group, mean)
plot(example_space[, c("dimension_1", "dimension_2")], col = example_space$color, pch = 20, cex = 1.8)
text(xs, ys, labels = names(xs), cex = 2.5)
# mcp
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mcp",
parallel = 1
)
# rarefacted
rarefact_space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mcp",
parallel = 1
)
# mst
space_size(
X = example_space,
dimensions =  c("dimension_1", "dimension_2"),
group = "group",
method = "mst"
)
# mst
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
group = "group",
method = "mst"
)
# mst
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mst"
)
# mst rarefacted
rarefact_space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mst",
parallel = 1
)
# ellipse
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mst"
)
# ellipse
space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
# ellipse
rarefact_space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/rarefact_space_size.R")
# ellipse
rarefact_space_size(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse"
)
source("~/Dropbox/R_package_testing/PhenotypeSpace/R/rarefact_space_size_difference.R")
FUN <- "rarefact_space_size_difference"
#run function
source(file.path("./R", paste0(FUN,".R")))
# remove objects but no functions
rm(list = setdiff(ls(), c(lsf.str(), "FUN")))
#remove images and sound files
rm.sf()
# to troubleshoot internally
for(i in run.def.args(FUN)) try(eval(parse(text = i)), silent = T)
rm(i)
data("example_space")
# plot data
xs <- tapply(example_space$dimension_1, example_space$group, mean)
ys <- tapply(example_space$dimension_2, example_space$group, mean)
plot(example_space[, c("dimension_1", "dimension_2")], col = example_space$color, pch = 20, cex = 1.8)
text(xs, ys, labels = names(xs), cex = 2.5)
(ssd <- space_size_difference(
formula = group ~ dimension_1 + dimension_2,
data = example_space
))
rarefact_space_size_difference(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
iterations = 5)
tadrf <- space_size_difference(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "mcp")
tadrf <- space_size_difference(
formula = group ~ dimension_1 + dimension_2,
data = example_space,
method = "ellipse")
tadrf
tadrf <- space_size_difference(
formula = group ~ dimension_1 + dimension_2 + dimension_3,
data = example_space,
method = "mcp")
# system("autoconf  ")
# usethis::use_rcpp()
# setwd("./PhenotypeSpace/")
#delete NAMESPACE file
# Rcpp::compileAttributes()
#run document twice
#run document twice
devtools::document(".")
devtools::document(".")
# devtools::load_all()
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
# devtools::run_examples( start = "rm_sil")
# devtools::build_manual()
# devtools::install()
# check in R version 3.X.X
## run in terminal:
# /opt/R/3.6.3/bin/R
# devtools::check("~/Dropbox/R_package_testing/PhenotypeSpace/PhenotypeSpace", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
# system("autoconf  ")
# usethis::use_rcpp()
# setwd("./PhenotypeSpace/")
#delete NAMESPACE file
# Rcpp::compileAttributes()
#run document twice
#run document twice
devtools::document(".")
devtools::document(".")
# devtools::load_all()
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
# devtools::run_examples( start = "rm_sil")
# devtools::build_manual()
# devtools::install()
# check in R version 3.X.X
## run in terminal:
# /opt/R/3.6.3/bin/R
# devtools::check("~/Dropbox/R_package_testing/PhenotypeSpace/PhenotypeSpace", document = TRUE, run_dont_test = TRUE, vignettes = FALSE, manual = TRUE)
